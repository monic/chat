/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ifrn.edu.frame;

import ifrn.edu.bean.ChatMensagem;
import ifrn.edu.bean.ChatMensagem.Action;
import ifrn.edu.service.ClienteService;
import java.awt.Rectangle;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Monic
 */
public class ClienteFrame extends javax.swing.JFrame {

    private Socket socket;
    private ChatMensagem mensagem;
    private ClienteService service;
    
    public ClienteFrame() {
        initComponents();
    }
    private class ListenerSocket implements Runnable{
        private ObjectInputStream input;
        
       public  ListenerSocket(Socket socket){
            try {
                this.input = new ObjectInputStream(socket.getInputStream());
            } catch (IOException ex) {
                Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
       }
        @Override
        public void run() {
            ChatMensagem mensagem = null;
            
            try {
                while((mensagem = (ChatMensagem) input.readObject()) != null){
                    Action action = mensagem.getAction();
                    if(action.equals(Action.CONNECT)){
                        connected(mensagem);
                    }else if(action.equals(Action.DISCONNECT)){
                        desconectando();
                        socket.close();
                    }else if(action.equals(Action.SEND_ONE)){
                        receive(mensagem);
                    }else if(action.equals(Action.USERS_ONLINE)){
                        atualizar(mensagem);
                    }
                }
            } catch (IOException ex) {
                Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
    }
    
    private void connected(ChatMensagem mensagem){
        if(mensagem.getTexto().equals("Não")){
            this.jTextName.setText("");
            JOptionPane.showMessageDialog(this, "Tente outro nome");
            return;
        }
        this.mensagem = mensagem;
        this.jButtonConnectar.setEnabled(false);
        this.jTextName.setEditable(false);
        this.jButtonSair.setEnabled(true);
        this.jTextAreaSend.setEnabled(true);
        this.jTextAreaRecebe.setEnabled(true);
        this.jButtonEnviar.setEnabled(true);
        this.jButtonLimpar.setEnabled(true);
            
        JOptionPane.showMessageDialog(this, "Conexão Estabelecida!");
        
    }
    private void desconectando(){
        
        this.jButtonConnectar.setEnabled(true);
        this.jTextName.setEditable(true);
        this.jButtonSair.setEnabled(false);
        this.jTextAreaSend.setEnabled(false);
        this.jTextAreaRecebe.setEnabled(false);
        this.jButtonEnviar.setEnabled(false);
        this.jButtonLimpar.setEnabled(false);
        //Limpar area de texto
        this.jTextAreaRecebe.setText("");
        this.jTextAreaSend.setText("");

        JOptionPane.showMessageDialog(this, "Você está desconectado");
        
    
    }
    private void receive(ChatMensagem mensagem){
        this.jTextAreaRecebe.append(mensagem.getName() + " diz: " + mensagem.getTexto() + "\n");
    }
    private void atualizar(ChatMensagem mensagem){
        System.out.println(mensagem.getSetOnline().toString());
        Set<String> names = mensagem.getSetOnline();
        names.remove((String) mensagem.getName());
        String[] array = (String[])names.toArray(new String[names.size()]);
        this.jListOnline.setListData(array);
        this.jListOnline.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.jListOnline.setLayoutOrientation(JList.VERTICAL);
        
        
    }   
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextName = new javax.swing.JTextField();
        jButtonConnectar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListOnline = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRecebe = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaSend = new javax.swing.JTextArea();
        jButtonEnviar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conectar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12))); // NOI18N

        jButtonConnectar.setText("Connectar");
        jButtonConnectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnectarActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.setEnabled(false);
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonConnectar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConnectar)
                    .addComponent(jButtonSair)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Onlines", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 12))); // NOI18N

        jScrollPane3.setViewportView(jListOnline);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextAreaRecebe.setEditable(false);
        jTextAreaRecebe.setColumns(20);
        jTextAreaRecebe.setRows(5);
        jTextAreaRecebe.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaRecebe);

        jTextAreaSend.setColumns(20);
        jTextAreaSend.setRows(5);
        jTextAreaSend.setEnabled(false);
        jScrollPane2.setViewportView(jTextAreaSend);

        jButtonEnviar.setText("Enviar");
        jButtonEnviar.setEnabled(false);
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.setEnabled(false);
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButton1.setText("Tremer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonEnviar)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEnviar)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        this.mensagem.setAction(Action.DISCONNECT);
        this.service.send(this.mensagem);
        desconectando();
        
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jButtonConnectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnectarActionPerformed
        String name = this.jTextName.getText();
        
        if(!name.isEmpty()){
            this.mensagem = new ChatMensagem();
            this.mensagem.setAction(Action.CONNECT);
            this.mensagem.setName(name);
            
            
            this.service = new ClienteService();
            this.socket = this.service.connect();
            new Thread(new ListenerSocket(this.socket)).start();
            this.service.send(mensagem);
        }
    }//GEN-LAST:event_jButtonConnectarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        this.jTextAreaSend.setText("");
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        String text = this.jTextAreaSend.getText();
        String name = this.mensagem.getName();
        this.mensagem = new ChatMensagem();
        if(this.jListOnline.getSelectedIndex() > -1){
            this.mensagem.setNomeReservado((String) this.jListOnline.getSelectedValue());
            this.mensagem.setAction(Action.SEND_ONE);
            this.jListOnline.clearSelection();
        }else{
            this.mensagem.setAction(Action.SEND_ALL);
        }
        if(!text.isEmpty()){
            this.mensagem.setName(name);
            this.mensagem.setTexto(text);
            //Enviar a mensagem para o proprio usuario
            this.jTextAreaRecebe.append("Você disse: " + text + "\n");
            //Teste
            this.service.send(this.mensagem);
        }
        this.jTextAreaSend.setText("");
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Rectangle retangulo = getBounds();
        
        try {
            for (int i=0;i<3;i++){
                setBounds(retangulo.x-20, retangulo.y, retangulo.width, retangulo.height);
                Thread.sleep(100);
                //setBounds(retangulo);
                //Thread.sleep(200);
                setBounds(retangulo.x+40, retangulo.y, retangulo.width, retangulo.height);
                Thread.sleep(100);
                setBounds(retangulo);
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(ClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonConnectar;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JList jListOnline;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextAreaRecebe;
    private javax.swing.JTextArea jTextAreaSend;
    private javax.swing.JTextField jTextName;
    // End of variables declaration//GEN-END:variables
}
